#!/usr/bin/env expect
set dir [exec mktemp -d]
set env(HOME) $dir
set timeout 5
spawn [file dirname [info script]]/../vush
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}
send "alias ll='echo hi'\r"
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}
send "alias\r"
expect {
    -re "\[\r\n\]+ll='echo hi'\[\r\n\]+vush> " {}
    timeout { send_user "alias listing failed\n"; exit 1 }
}
send "ll there\r"
expect {
    -re "\[\r\n\]+hi there\[\r\n\]+vush> " {}
    timeout { send_user "alias use failed\n"; exit 1 }
}
send "unalias ll\r"
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}
send "alias\r"
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}

# Nested alias expansion
send "alias first='echo nested'\r"
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}
send "alias second=first\r"
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}
send "second test\r"
expect {
    -re "\[\r\n\]+nested test\[\r\n\]+vush> " {}
    timeout { send_user "nested alias failed\n"; exit 1 }
}
send "unalias first second\r"
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}

# Create many aliases to ensure dynamic allocation works
for {set i 0} {$i < 40} {incr i} {
    send "alias a$i='echo hi$i'\r"
    expect {
        "vush> " {}
        timeout { send_user "prompt timeout\n"; exit 1 }
    }
}
send "alias\r"
expect {
    -re "a39='echo hi39'" {}
    timeout { send_user "alias storage failed\n"; exit 1 }
}
send "a39 world\r"
expect {
    -re "\[\r\n\]+hi39 world\[\r\n\]+vush> " {}
    timeout { send_user "alias expanded failed\n"; exit 1 }
}
send "exit\r"
expect {
    eof {}
    timeout { send_user "eof timeout\n"; exit 1 }
}
exec rm -rf $dir
