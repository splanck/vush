#!/usr/bin/env expect
set timeout 5
set script [exec mktemp]
set f [open $script "w"]
puts $f {while getopts "ab:" o; do echo "$o:$OPTARG"; done; echo index:$OPTIND}
close $f
spawn [file dirname [info script]]/../vush $script -a -b foo rest
expect {
    -re "a:\[\r\n\]+b:foo\[\r\n\]+index:4\[\r\n\]+" {}
    timeout { send_user "getopts parsing failed\n"; exec rm $script; exit 1 }
}
expect {
    eof {}
    timeout { send_user "eof timeout\n"; exit 1 }
}
spawn [file dirname [info script]]/../vush $script -z
expect {
    -re "getopts: illegal option -- z\[\r\n\]+\?:\[\r\n\]+index:2\[\r\n\]+" {}
    timeout { send_user "invalid option not handled\n"; exec rm $script; exit 1 }
}
expect {
    eof {}
    timeout { send_user "eof timeout\n"; exit 1 }
}
spawn [file dirname [info script]]/../vush $script -b
expect {
    -re "getopts: option requires an argument -- b\[\r\n\]+\?:\[\r\n\]+index:2\[\r\n\]+" {}
    timeout { send_user "missing argument not detected\n"; exec rm $script; exit 1 }
}
expect {
    eof {}
    timeout { send_user "eof timeout\n"; exit 1 }
}
spawn [file dirname [info script]]/../vush $script -b foo
expect {
    -re "b:foo\[\r\n\]+index:3\[\r\n\]+" {}
    timeout { send_user "argument with space failed\n"; exec rm $script; exit 1 }
}
expect {
    eof {}
    timeout { send_user "eof timeout\n"; exit 1 }
}
exec rm $script
