#!/usr/bin/env expect
set timeout 5
spawn [file dirname [info script]]/../build/vush
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}
send {echo $((1+2))\r}
expect {
    -re "\[\r\n\]+3\[\r\n\]+vush> " {}
    timeout { send_user "basic arithmetic failed\n"; exit 1 }
}
send "X=4\r"
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}
send {echo $((X*2))\r}
expect {
    -re "\[\r\n\]+8\[\r\n\]+vush> " {}
    timeout { send_user "variable expansion failed\n"; exit 1 }
}
send {X=$((X+3))\r}
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}
send "echo $X\r"
expect {
    -re "\[\r\n\]+11\[\r\n\]+vush> " {}
    timeout { send_user "assignment arithmetic failed\n"; exit 1 }
}
send "let 5\r"
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}
send "echo $?\r"
expect {
    -re "\[\r\n\]+0\[\r\n\]+vush> " {}
    timeout { send_user "let success failed\n"; exit 1 }
}
send "let 0\r"
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}
send "echo $?\r"
expect {
    -re "\[\r\n\]+1\[\r\n\]+vush> " {}
    timeout { send_user "let failure failed\n"; exit 1 }
}
send "let 1+\r"
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}
send "echo $?\r"
expect {
    -re "\[\r\n\]+1\[\r\n\]+vush> " {}
    timeout { send_user "let error failed\n"; exit 1 }
}
send "let 1/0\r"
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}
send "echo $?\r"
expect {
    -re "\[\r\n\]+1\[\r\n\]+vush> " {}
    timeout { send_user "let divide by zero failed\n"; exit 1 }
}
send {echo $((5 % 0))\r}
expect {
    -re "\[\r\n\]+0\[\r\n\]+vush> " {}
    timeout { send_user "arith expand divide by zero output\n"; exit 1 }
}
send "echo $?\r"
expect {
    -re "\[\r\n\]+1\[\r\n\]+vush> " {}
    timeout { send_user "arith expand status failed\n"; exit 1 }
}
send {echo $((!0))\r}
expect {
    -re "\[\r\n\]+1\[\r\n\]+vush> " {}
    timeout { send_user "unary not failed\n"; exit 1 }
}
send {echo $((~0))\r}
expect {
    -re "\[\r\n\]+-1\[\r\n\]+vush> " {}
    timeout { send_user "bitwise not failed\n"; exit 1 }
}
send {echo $((1 && 0))\r}
expect {
    -re "\[\r\n\]+0\[\r\n\]+vush> " {}
    timeout { send_user "logical and failed\n"; exit 1 }
}
send {echo $((1 || 0))\r}
expect {
    -re "\[\r\n\]+1\[\r\n\]+vush> " {}
    timeout { send_user "logical or failed\n"; exit 1 }
}
send "I=1\r"
expect {
    "vush> " {}
    timeout { send_user "prompt timeout\n"; exit 1 }
}
send {echo $((I++))\r}
expect {
    -re "\[\r\n\]+1\[\r\n\]+vush> " {}
    timeout { send_user "postfix increment failed\n"; exit 1 }
}
send {echo $I\r}
expect {
    -re "\[\r\n\]+2\[\r\n\]+vush> " {}
    timeout { send_user "postfix increment value failed\n"; exit 1 }
}
send {echo $((++I))\r}
expect {
    -re "\[\r\n\]+3\[\r\n\]+vush> " {}
    timeout { send_user "prefix increment failed\n"; exit 1 }
}
send "exit\r"
expect {
    eof {}
    timeout { send_user "eof timeout\n"; exit 1 }
}
