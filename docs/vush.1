.TH VUSH 1 "" "vush 0.1.0"
.SH NAME
vush \- simple POSIX-style shell
.SH SYNOPSIS
.B vush
.RI [ scriptfile ]
.br
.BR vush " -c " command
.SH DESCRIPTION
vush is a lightweight POSIX-style shell focused on providing the
essentials for interactive and scripted use. It supports job control,
pipelines, redirection and standard shell expansions. See README.md or
docs/vushdoc.md for a full feature overview.
.SH OPTIONS
.TP
.B -c command
Execute the provided command string and exit.
.TP
.BR -V , --version
Print version information and exit.
.SH STARTUP
If no script file or -c option is given, \fB~/.vushrc\fP is read before the first prompt if it exists. When the \fBENV\fP variable is set, the file it names is processed afterward. Enabling \fBset -p\fP prevents both files from being loaded. The \fBset -t\fP option exits after a single command is executed. The \fBset -h\fP option caches each command after it runs. The \fBset -k\fP option treats \fINAME=value\fP words after the command name as temporary environment assignments; for example, \fBset -k; sh -c 'echo $FOO' FOO=bar\fP prints \fBbar\fP.
.SH BUILTINS
.TP
.B cd [-L|-P] [dir]
Change the current directory. Without an argument it switches to \$HOME. `~user` names are expanded using the password database. After a successful change \$PWD and \$OLDPWD are updated. Use `cd -` to print and switch to \$OLDPWD. `-L` (default) keeps \$PWD as the logical path while `-P` resolves the target with realpath() and sets \$PWD to the physical location. If `dir` does not begin with `/` or `.`, each directory listed in the \fBCDPATH\fP environment variable is searched. When a \fBCDPATH\fP entry is used the resulting path is printed. Logical canonicalization processes at most \fBPATH_MAX/2\fP components.
.TP
.B pushd dir
Push the current directory and change to \fIdir\fP.
.TP
.B popd
Return to the directory from the stack.
.TP
.B "printf FORMAT [args...]"
Print formatted text. Backslash escapes in \fIFORMAT\fP are translated before examining \% conversions. The \%b conversion interprets escapes in its argument before printing.
.TP
.B "echo [-n] [-e] [args...]"
Print arguments separated by spaces. With \-n no newline is added and \-e enables backslash escapes.
.TP
.B dirs
Display the directory stack.
.TP
.B "exit [status]"
Terminate the shell with an optional status code.
.TP
.B :
Do nothing and return success.
.TP
.B true
Return a successful status.
.TP
.B false
Return a failure status.
.TP
.B "exec command [args...]"
Replace the shell with \fIcommand\fP.
.TP
.B "pwd [-L|-P]"
Print the current working directory. \-P displays the physical directory from \fBgetcwd()\fP while \-L (the default) prints \$PWD.
.TP
.B "jobs [-l|-p] [ID]"
List background jobs. \-l prints the PID and status and \-p prints only the PID. With IDs only those jobs are shown.
.TP
.B "fg [ID]"
Wait for background job \fIID\fP or the most recent job when omitted.
.TP
.B "bg [ID]"
Resume the specified job or the last started job if no ID is given.
.TP
.B "kill [-s SIGNAL|-SIGNAL] [-l] ID|PID"
Send a signal to the given job or process. Use \-l to list signals or \-l \fINUM\fP to print the signal name for \fINUM\fP.
.TP
.B "wait [ID|PID]"
Wait for the given job or process to finish.
.TP
.B "trap [-p|-l | 'cmd' SIGNAL]"
Execute \fIcmd\fP when \fISIGNAL\fP is received, list traps with \-p or with no arguments, or show available signals with \-l. Use `trap SIGNAL` to clear. Use `EXIT` or `0` for a command run when the shell exits.
.TP
.B "export [-p|-n NAME] NAME[=VALUE]"
Manage exported variables or set one. Use \-p to list all exported variables. \-n \fINAME\fP stops exporting \fINAME\fP without removing it. Without \fB=VALUE\fP the variable's current value is exported and it is created with an empty value if undefined.
.TP
.B "readonly [-p] NAME[=VALUE]"
Mark variables as read-only or list them. Without \fB=VALUE\fP the variable is created with an empty value if undefined. With \-p the variables are printed using `readonly NAME=value` format.
.TP
.B "local NAME[=VALUE]"
Define a variable scoped to the current function.
.TP
.B "unset [-f|-v] NAME"
Remove functions with \-f, variables with \-v, or both.
.TP
.B "history [-c|-d NUMBER]"
Show command history, clear it with \-c, or delete a specific entry with \-d. Entries are read from and written to the file specified by \fBVUSH_HISTFILE\fP (default \fB~/.vush_history\fP). History size is controlled by the \fBVUSH_HISTSIZE\fP environment variable (default 1000).
.TP
.B "fc [-lnr] [-e editor] [first [last]]"
List or edit previous commands. Use \-s [old=new] [command] to immediately run a command with optional text replacement.
.TP
.B "hash [-r] [name...]"
Manage cached command paths.
.TP
.B "alias [-p] [NAME[=VALUE]]"
Set or display aliases. With no arguments all aliases are listed. A single NAME prints that alias. \-p lists using `alias NAME='value'` format.
.TP
.B "unalias [-a] NAME"
Remove aliases. With \-a all aliases are cleared.
.TP
.B "read [-r] VAR..."
Read a line of input into variables using the first character of \$IFS to split fields.
.TP
.B "return [status]"
Return from a shell function with an optional status.
.TP
.B "shift [N]"
Drop the first \fIN\fP positional parameters (default 1).
.TP
.B "break [N]"
Exit \fIN\fP levels of loops (default 1).
.TP
.B "continue [N]"
Start the next iteration of the \fIN\fPth enclosing loop (default 1).
.TP
.B "getopts OPTSTRING VAR"
Parse positional parameters, storing the current option letter in \fIVAR\fP, any argument in \fIOPTARG\fP, and advancing \fIOPTIND\fP.
.TP
.B "let EXPR"
Evaluate an arithmetic expression.
.TP
.B "set [options] [-- args...]"
Set shell options or replace positional parameters.
.TP
.B set
With no operands lists all shell variables and functions.
.TP
.B "test EXPR" or "[ EXPR ]"
Evaluate a conditional expression. Supports string comparisons, numeric operators and POSIX unary file tests such as \-e, \-f, \-d, \-r, \-w, \-x, \-b, \-c, \-p, \-h/\-L, \-s, \-O, \-G, \-u, \-g, \-k, \-S and \-t. The unary \! operator and binary \-a/\-o apply with the usual precedence. Binary comparisons `file1 -nt file2`, `file1 -ot file2` and `file1 -ef file2` are also available.
.TP
.B "[[ EXPR ]]"
Evaluate a conditional expression with pattern matching.
.PP
Aliases are stored in the file specified by \fBVUSH_ALIASFILE\fP (default \fB~/.vush_aliases\fP). The file contains one \fIname=value\fP pair per line without quotes.
.TP
.B "type NAME..."
Display how each NAME would be interpreted.
.TP
.B "command [-p] [-v|-V] NAME [args...]"
Run NAME ignoring shell functions. With \-v or \-V display how the name would be resolved. The \-p option searches or executes using /bin:/usr/bin instead of the current \$PATH.
.TP
.B "eval WORDS..."
Concatenate arguments and execute the result.
.TP
.B "source file [args...]" or ". file [args...]"
Execute commands from a file with optional positional parameters. If \fIfile\fP contains no \fB/\fP, each directory in \$PATH is searched.
.TP
.B help
Display information about built-in commands.
.TP
.B "time [-p] command [args...]"
Run a command and print timing statistics. With \-p, output follows the POSIX real, user, sys format.
.TP
.B times
Print cumulative user/system CPU times.
.TP
.B "ulimit [-HS] [-a|-c|-d|-f|-n|-s|-t|-v [limit]]"
Display or set resource limits.
.TP
.B "umask [-S] [mask]"
Set or display the file creation mask. \fImask\fP may be an octal number or a symbolic string like `u=rwx,g=rx,o=rx`. With \-S, the mask is shown in symbolic form.
.SH SHELL OPTIONS
Use the \fBset\fP builtin to change optional behavior. Options are enabled with a minus and disabled with a plus. They affect commands run after \fBset\fP.
.TP
.B -e
Exit immediately if a simple command fails.
.TP
.B -u
Error when expanding an undefined variable.
.TP
.B -x
Print each command just before execution using \$PS4 as a prefix.
.TP
.B -C
Refuse to overwrite existing files with \fB>\fP. Use \fB>| file\fP to override or \fBset +C\fP to disable.
.TP
.B -m
Enable job control so background jobs can be managed. Interactive shells enable this by default.
.TP
.B "-o pipefail"
Return the status of the first failing command in a pipeline. Disable with \fBset +o pipefail\fP.
.TP
.B "-o noclobber"
Same as \fB-C\fP. Disable with \fBset +o noclobber\fP.
Ifile2P and Ifile1P -ef Ifile2P.
The \fBtrap\fP builtin lists available signal names when invoked with \-l.
The \fBkill\fP builtin prints a signal name when \-l is followed by a number.
The \fBunset\fP builtin removes variables and functions; \-v targets variables and \-f functions.
The \fBfg\fP and \fBbg\fP builtins operate on the most recently started
background job when no ID is given.
History can be manipulated using \fBfc\fP.  The \-n flag omits numbers when
listing, \-r reverses the order and \-s re-executes the selected command with
optional text substitution.
The \fBulimit\fP builtin displays or sets resource limits; use \-H for hard
limits and \-S for soft limits.
.SH SHELL FEATURES
Parameter, command and arithmetic expansion, wildcard matching,
functions, history and background jobs are available. Expanded
examples reside in docs/vushdoc.md.
The redirection operator \fB>|\fP forces truncation even when the \fBnoclobber\fP option is set.
File descriptor numbers may prefix \fB<\fP or \fB>\fP to select an alternate descriptor, e.g. \fB3>file\fP.
.SH ENVIRONMENT
.TP
.B VUSH_HISTFILE
Location of the history file.
.TP
.B VUSH_HISTSIZE
Maximum number of history entries.
.TP
.B VUSH_ALIASFILE
File used to store persistent aliases.
.TP
.B VUSH_FUNCFILE
File used to store persistent functions.
.TP
.B ENV
Extra startup file executed after \fB~/.vushrc\fP when set.
.TP
.B PS1
Primary command prompt string.
.TP
.B PS2
.PP
.nf
Reading without naming a variable stores the line in \fBREPLY\fP. Fields are
split using the first character of \fB$IFS\fP:
257
.fi
Displayed when additional input is needed.
.TP
.B PS3
.PP
The \fBprintf\fP builtin translates backslash escapes in the format
string before examining \% conversions. The \%b conversion still interprets
escapes in its argument.
.PP
Measuring command duration:
.PP
.nf
$ time -p sleep 0.1
real 0.10
user 0.00
sys  0.00
.fi
Prompt used by the select builtin.
.TP
.B PS4
Prefix for tracing output from set -x.
.TP
.B MAIL
Mailbox file checked before each prompt. A notice is printed on update.
.TP
.B MAILPATH
Colon separated list of additional mailbox files. Each prints "New mail in <file>" when modified.
.SH FILES
.TP
.B ~/.vushrc
Commands executed before the first prompt if present.
.TP
.B ~/.vush_history
Persistent command history.
.TP
.B ~/.vush_aliases
Stored aliases.
.TP
.B ~/.vush_funcs
Stored functions.
.SH EXAMPLES
.B vush
starts an interactive shell. To run a script file use
.B "vush script.vsh".
More examples can be found in docs/vushdoc.md.
.PP
Resource limits can be queried or adjusted, e.g.:
.PP
.nf
$ ulimit -H -n 4096
$ ulimit -S -s
.fi
.PP
Reading without naming a variable stores the line in \fBREPLY\fP:
.PP
.nf
$ printf "foo\n" | vush -c 'read; echo $REPLY'
foo
.fi
.SH SEE ALSO
README.md \- overview and quick start, docs/vushdoc.md \- examples and
detailed explanations, the POSIX Shell specification
<https://pubs.opengroup.org/onlinepubs/9699919799/>, sh(1)
.SH AUTHOR
The vush developers.
